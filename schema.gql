# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Category {
  id: Float
  uuid: String
  name: String
  orders: [Order!]
}

type Vendor {
  id: Float
  uuid: String
  name: String
  createdAt: DateTime
  updatedAt: DateTime
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type VendorProduct {
  id: Float
  uuid: String
  name: String
  quantity: Float
  categoryId: Float
  vendorId: Float
  createdAt: DateTime
  updatedAt: DateTime
  category: Category
  vendor: Vendor
  product: Product
}

type Product {
  id: Float
  uuid: String
  name: String
  description: String
  images: [String!]!
  price: Float
  createdAt: DateTime
  updatedAt: DateTime
  category: Category
  vendorProduct: VendorProduct
  productOrder: [ProductOrder!]
}

type ProductOrder {
  productId: Float
  orderId: Float
  quantity: Float
  product: Product
  order: Order
}

type Order {
  id: Float
  uuid: String
  userId: Float
  createdAt: DateTime
  updatedAt: DateTime
  orderStatus: OrderStatus!
  user: User!
  productOrders: [ProductOrder!]
}

enum OrderStatus {
  PLACED
  IN_TRANSIT
  COMPLETED
  CANCELLED
}

type User {
  id: Float
  uuid: String
  email: String
  type: Role
  firstName: String
  lastName: String
  username: String
  avatar: String
  createdAt: DateTime
  updatedAt: DateTime
  orders: [Order!]
  vendor: Vendor
}

enum Role {
  USER
  ADMIN
  VENDOR
}

type LoginOutput {
  access_token: String!
  expiresAt: DateTime!
  user: User!
}

type Query {
  user(where: UserWhereUniqueInput!): User
  category(where: CategoryWhereUniqueInput!): Category
  categories: [Category!]!
  product(where: ProductWhereUniqueInput!): Product
  products(where: ProductWhereInput!): [Product!]!
  vendor(where: VendorProductWhereUniqueInput!): VendorProduct
  order(where: OrderWhereUniqueInput!): Order
  productOrder(where: ProductOrderWhereUniqueInput!): ProductOrder
}

input UserWhereUniqueInput {
  uuid: String
  username: String
  email: String
}

input CategoryWhereUniqueInput {
  id: Float
  uuid: String
  name: String
}

input ProductWhereUniqueInput {
  id: Float
  uuid: String
  vendorProductId: Float
}

input ProductWhereInput {
  categoryId: Float
}

input VendorProductWhereUniqueInput {
  id: Float
  uuid: String
  name: String
}

input OrderWhereUniqueInput {
  uuid: String
  id: Float
}

input ProductOrderWhereUniqueInput {
  productId: Float!
  orderId: Float!
}

type Mutation {
  login(data: LoginUserInput!): LoginOutput!
  signup(data: SignUpInput!): User!
  createUser(data: UserCreateInput!): User!
  createCategory(data: CategoryCreateInput!): Category!
  createVendor(data: VendorCreateInput!): Vendor!
  createProduct(data: ProductCreateInput!): Product!
  createVendorProduct(data: VendorProductCreateInput!): VendorProduct!
  createOrder(data: OrderCreateInput!): Order!
  createProductOrder(data: ProductOrderCreateInput!): ProductOrder!
}

input LoginUserInput {
  email: String!
  password: String!
}

input SignUpInput {
  email: String!
  username: String!
  password: String!
  firstName: String!
  lastName: String!
  avatar: String!
}

input UserCreateInput {
  type: Role!
  email: String!
  username: String!
  password: String!
  firstName: String!
  lastName: String!
  avatar: String!
}

input CategoryCreateInput {
  name: String!
}

input VendorCreateInput {
  name: String!
  user: UserCreateNestedOneWithoutVendorInput!
}

input UserCreateNestedOneWithoutVendorInput {
  connect: UserWhereUniqueInput!
}

input ProductCreateInput {
  name: String!
  description: String!
  images: [String!]!
  price: Float!
  category: CategoryCreateNestedOneWithoutProductsInput!
  vendorProduct: VendorProductCreateNestedOneWithoutProductInput!
}

input CategoryCreateNestedOneWithoutProductsInput {
  connect: CategoryWhereUniqueInput!
}

input VendorProductCreateNestedOneWithoutProductInput {
  connect: VendorProductWhereUniqueInput!
}

input VendorProductCreateInput {
  name: String!
  quantity: Float!
  category: CategoryCreateNestedOneWithoutVendorProductsInput!
  vendor: VendorCreateNestedOneWithoutVendorProductsInput!
}

input CategoryCreateNestedOneWithoutVendorProductsInput {
  connect: CategoryWhereUniqueInput!
}

input VendorCreateNestedOneWithoutVendorProductsInput {
  connect: VendorWhereUniqueInput!
}

input VendorWhereUniqueInput {
  id: Float
  uuid: String
  userId: String
  vendorName: String
}

input OrderCreateInput {
  productOrders: ProductOrderCreateNestedManyWithoutOrderInput!
}

input ProductOrderCreateNestedManyWithoutOrderInput {
  createMany: ProductOrderCreateManyOrderInputEnvelope!
}

input ProductOrderCreateManyOrderInputEnvelope {
  data: [ProductOrderCreateManyOrderInput!]!
}

input ProductOrderCreateManyOrderInput {
  productId: Float
  quantity: Float
}

input ProductOrderCreateInput {
  quantity: Float
  product: ProductCreateNestedOneWithoutProductOrderInput!
  order: OrderCreateNestedOneWithoutProductOrdersInput!
}

input ProductCreateNestedOneWithoutProductOrderInput {
  connect: ProductWhereUniqueInput!
}

input OrderCreateNestedOneWithoutProductOrdersInput {
  connect: OrderWhereUniqueInput!
}