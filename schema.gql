# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  id: Float
  uuid: String
  email: String
  type: Role
  firstName: String
  lastName: String
  username: String
  createdAt: DateTime
  updatedAt: DateTime
}

enum Role {
  USER
  ADMIN
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type LoginOutput {
  access_token: String!
  expiresAt: DateTime!
  user: User!
}

type Movie {
  id: Float
  uuid: String
  name: String
  description: String
  images: [String!]
  createdAt: DateTime
  updatedAt: DateTime
  genreId: Float
  genre: Genre
}

type Genre {
  id: Float
  uuid: String
  name: String
  createdAt: DateTime
  updatedAt: DateTime
  movies: [Movie!]
}

type Query {
  user(where: UserWhereUniqueInput!): User
  genres: [Genre!]!
  movies(skip: Int, take: Int, cursor: MovieWhereUniqueInput, orderBy: MovieOrderByInput, where: MovieWhereInput, search: SearchInput): [Movie!]!
}

input UserWhereUniqueInput {
  uuid: String
  username: String
  email: String
}

input MovieWhereUniqueInput {
  id: Int
  uuid: String
}

input MovieOrderByInput {
  id: OrderByArg
  uuid: OrderByArg
  name: OrderByArg
  description: OrderByArg
  createdAt: OrderByArg
  updatedAt: OrderByArg
}

enum OrderByArg {
  ASC
  DESC
}

input MovieWhereInput {
  id: Int
  uuid: String
  name: String
  description: String
  createdAt: DateTime
  updatedAt: DateTime
}

input SearchInput {
  value: String!
}

type Mutation {
  login(data: LoginUserInput!): LoginOutput!
  signup(data: SignUpInput!): User!
  createUser(data: UserCreateInput!): User!
  createGenre(data: GenreCreateInput!): Genre!
  createMovie(data: MovieCreateInput!): Movie!
}

input LoginUserInput {
  email: String!
  password: String!
}

input SignUpInput {
  email: String!
  username: String!
  password: String!
  firstName: String!
  lastName: String!
}

input UserCreateInput {
  type: Role!
  email: String!
  username: String!
  password: String!
  firstName: String!
  lastName: String!
}

input GenreCreateInput {
  name: String!
}

input MovieCreateInput {
  name: String!
  description: String
  images: [String!]!
  genreId: Float!
}